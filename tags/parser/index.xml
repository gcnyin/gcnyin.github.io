<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>parser on 箱子的博客</title><link>https://xiangzi.me/tags/parser/</link><description>Recent content in parser on 箱子的博客</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 06 Nov 2019 18:00:00 +0800</lastBuildDate><atom:link href="https://xiangzi.me/tags/parser/index.xml" rel="self" type="application/rss+xml"/><item><title>mini-parser小轮子</title><link>https://xiangzi.me/post/20191106-mini-parser/</link><pubDate>Wed, 06 Nov 2019 18:00:00 +0800</pubDate><guid>https://xiangzi.me/post/20191106-mini-parser/</guid><description>代码链接 demo如下，定义好rule后进行parse。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 const rule = AndRule.of( [ TextRule.of(&amp;#34;hello&amp;#34;, &amp;#34;HELLO_RULE&amp;#34;), OrRule.of( [TextRule.of(&amp;#34;, &amp;#34;), TimesRule.of(3, TextRule.of(&amp;#34; &amp;#34;, &amp;#34;SPACE&amp;#34;), &amp;#34;TIMES&amp;#34;)], &amp;#34;NO_NAME&amp;#34; ), TextRule.of(&amp;#34;world&amp;#34;, &amp;#34;WORLD&amp;#34;), OneOrMoreRule.of(TextRule.of(&amp;#34;!&amp;#34;), &amp;#34;SAMPLE&amp;#34;) ], &amp;#34;HELLO_WORLD&amp;#34; ); console.log(JSON.stringify(rule.accept(&amp;#34;hello world!!!&amp;#34;))); 结果为</description></item><item><title>slisp：一门简单的JVM上的Lisp方言</title><link>https://xiangzi.me/post/20190101-slisp/</link><pubDate>Tue, 01 Jan 2019 21:00:00 +0800</pubDate><guid>https://xiangzi.me/post/20190101-slisp/</guid><description>之前经常变更学习方向，没有收到很好的学习效果，浪费了不少时间。最近痛定思痛，把方向定为JVM和编译原理，这次真的不改了。本文是学习该方向的阶</description></item><item><title>Arcee：又一个Parser Generator轮子</title><link>https://xiangzi.me/post/20180902-arcee/</link><pubDate>Sun, 02 Sep 2018 12:35:00 +0800</pubDate><guid>https://xiangzi.me/post/20180902-arcee/</guid><description>项目地址：https://github.com/gcnyin/arcee 为什么要做这样一个东西呢？不是有Antlr吗，Python下不是也有</description></item></channel></rss>