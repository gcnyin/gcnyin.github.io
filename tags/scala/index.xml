<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>scala on 菠萝头</title><link>https://xiangzi.me/tags/scala/</link><description>Recent content in scala on 菠萝头</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 12 Aug 2021 11:06:25 +0800</lastBuildDate><atom:link href="https://xiangzi.me/tags/scala/index.xml" rel="self" type="application/rss+xml"/><item><title>使用akka踩的一些坑</title><link>https://xiangzi.me/post/20210812-experience-using-akka/</link><pubDate>Thu, 12 Aug 2021 11:06:25 +0800</pubDate><guid>https://xiangzi.me/post/20210812-experience-using-akka/</guid><description>最近在学习 akka，踩了很多坑，这里分享给大家。 使用 akka-stream 限制并发度 原代码如下。 1 2 3 4 5 6 7 8 9 def fetchRlCnt(pageNumbers: Seq[Int]): Future[Int] = { val futures: Seq[Future[HttpResponse]] = pageNumbers .map(page =&amp;gt; Http() .singleRequest(HttpRequest(uri = s&amp;#34;https://examples.org/mix_list/$page&amp;#34;))) Future.sequence(futures) .map(_.map(Unmarshal(_).to[MixList])) .flatMap(Future.sequence(_)) .map(_.map(_.data.rl.length).sum) } 本</description></item></channel></rss>